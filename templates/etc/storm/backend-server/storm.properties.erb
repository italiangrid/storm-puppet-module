# StoRM Backend configuration file
# WARNING: This file is auto-generated by puppet!

version: 2.0

db.username: <%= scope['storm::backend::db_username'] %>
db.password: <%= scope['storm::backend::db_password'] %>
db.hostname: <%= scope['storm::backend::db_hostname'] %>
db.port: <%= scope['storm::backend::db_port'] %>
db.properties: <%= scope['storm::backend::db_properties'] %>

db.pool.size: <%= scope['storm::backend::db_pool_size'] %>
db.pool.min_idle: <%= scope['storm::backend::db_pool_min_idle'] %>
db.pool.max_wait_millis: <%= scope['storm::backend::db_pool_max_wait_millis'] %>
db.pool.test_on_borrow: <%= scope['storm::backend::db_pool_test_on_borrow'] %>
db.pool.test_while_idle: <%= scope['storm::backend::db_pool_test_while_idle'] %>

<%- # srm endpoints loop
scope['storm::backend::srm_pool_members'].each_with_index do | member, i |
  @port = member['port'] != nil ? member['port'] : 8444
  @host = member['hostname']
-%>
srm_endpoints[<%=i%>].host: <%= @host %>
srm_endpoints[<%=i%>].port: <%= @port %>
<%- end # srm endpoints loop -%>

rest.port: <%= scope['storm::backend::rest_server_port'] %>
rest.max_threads: <%= scope['storm::backend::rest_server_max_threads'] %>
rest.max_queue_size: <%= scope['storm::backend::rest_server_max_queue_size'] %>

xmlrpc.port: <%= scope['storm::backend::xmlrpc_server_port'] %>
xmlrpc.max_threads: <%= scope['storm::backend::xmlrpc_server_max_threads'] %>
xmlrpc.max_queue_size: <%= scope['storm::backend::xmlrpc_server_max_queue_size'] %>

sanity_checks_enabled: <%= scope['storm::backend::sanity_checks_enabled'] %>

du.enabled: <%= scope['storm::backend::du_service_enabled'] %>
du.initial_delay: <%= scope['storm::backend::du_service_initial_delay'] %>
du.tasks_interval: <%= scope['storm::backend::du_service_tasks_interval'] %>
du.parallel_tasks_enabled: <%= scope['storm::backend::du_service_parallel_tasks_enabled'] %>

security.enabled: <%= scope['storm::backend::security_enabled'] %>
security.token: <%= scope['storm::backend::security_token'] %>

inprogress_requests_agent.delay: <%= scope['storm::backend::inprogress_requests_agent_delay'] %>
inprogress_requests_agent.interval: <%= scope['storm::backend::inprogress_requests_agent_interval'] %>
inprogress_requests_agent.ptp_expiration_time: <%= scope['storm::backend::inprogress_requests_agent_ptp_expiration_time'] %>

expired_spaces_agent.delay: <%= scope['storm::backend::expired_spaces_agent_delay'] %>
expired_spaces_agent.interval: <%= scope['storm::backend::expired_spaces_agent_interval'] %>

completed_requests_agent.enabled: <%= scope['storm::backend::completed_requests_agent_enabled'] %>
completed_requests_agent.delay: <%= scope['storm::backend::completed_requests_agent_delay'] %>
completed_requests_agent.interval: <%= scope['storm::backend::completed_requests_agent_interval'] %>
completed_requests_agent.purge_age: <%= scope['storm::backend::completed_requests_agent_purge_age'] %>
completed_requests_agent.purge_size: <%= scope['storm::backend::completed_requests_agent_purge_size'] %>

requests_picker_agent.delay: <%= scope['storm::backend::requests_picker_agent_delay'] %>
requests_picker_agent.interval: <%= scope['storm::backend::requests_picker_agent_interval'] %>
requests_picker_agent.max_fetched_size: <%= scope['storm::backend::requests_picker_agent_max_fetched_size'] %>

requests_scheduler.core_pool_size: <%= scope['storm::backend::requests_scheduler_core_pool_size'] %>
requests_scheduler.max_pool_size: <%= scope['storm::backend::requests_scheduler_max_pool_size'] %>
requests_scheduler.queue_size: <%= scope['storm::backend::requests_scheduler_queue_size'] %>
ptp_scheduler.core_pool_size: <%= scope['storm::backend::ptp_scheduler_core_pool_size'] %>
ptp_scheduler.max_pool_size: <%= scope['storm::backend::ptp_scheduler_max_pool_size'] %>
ptp_scheduler.queue_size: <%= scope['storm::backend::ptp_scheduler_queue_size'] %>
ptg_scheduler.core_pool_size: <%= scope['storm::backend::ptg_scheduler_core_pool_size'] %>
ptg_scheduler.max_pool_size: <%= scope['storm::backend::ptg_scheduler_max_pool_size'] %>
ptg_scheduler.queue_size: <%= scope['storm::backend::ptg_scheduler_queue_size'] %>
bol_scheduler.core_pool_size: <%= scope['storm::backend::bol_scheduler_core_pool_size'] %>
bol_scheduler.max_pool_size: <%= scope['storm::backend::bol_scheduler_max_pool_size'] %>
bol_scheduler.queue_size: <%= scope['storm::backend::bol_scheduler_queue_size'] %>

extraslashes.file: <%= scope['storm::backend::extraslashes_file'] %>
extraslashes.rfio: <%= scope['storm::backend::extraslashes_rfio'] %>
extraslashes.gsiftp: <%= scope['storm::backend::extraslashes_gsiftp'] %>
extraslashes.root: <%= scope['storm::backend::extraslashes_root'] %>

skip_ptg_acl_setup: <%= scope['storm::backend::skip_ptg_acl_setup'] %>

synch_ls.max_entries: <%= scope['storm::backend::synch_ls_max_entries'] %>
synch_ls.default_all_level_recursive: <%= scope['storm::backend::synch_ls_default_all_level_recursive'] %>
synch_ls.default_num_levels: <%= scope['storm::backend::synch_ls_default_num_levels'] %>
synch_ls.default_offset: <%= scope['storm::backend::synch_ls_default_offset'] %>

pinlifetime.default: <%= scope['storm::backend::pinlifetime_default'] %>
pinlifetime.maximum: <%= scope['storm::backend::pinlifetime_maximum'] %>

files.default_size: <%= scope['storm::backend::files_default_size'] %>
files.default_lifetime: <%= scope['storm::backend::files_default_lifetime'] %>
files.default_overwrite: <%= scope['storm::backend::files_default_overwrite'] %>
files.default_storagetype: <%= scope['storm::backend::files_default_storagetype'] %>

directories.enable_automatic_creation: <%= scope['storm::backend::directories_enable_automatic_creation'] %>
directories.enable_writeperm_on_creation: <%= scope['storm::backend::directories_enable_writeperm_on_creation'] %>

hearthbeat.bookkeeping_enabled: <%= scope['storm::backend::hearthbeat_bookkeeping_enabled'] %>
hearthbeat.performance_measuring_enabled: <%= scope['storm::backend::hearthbeat_performance_measuring_enabled'] %>
hearthbeat.period: <%= scope['storm::backend::hearthbeat_period'] %>
hearthbeat.performance_logbook_time_interval: <%= scope['storm::backend::hearthbeat_performance_logbook_time_interval'] %>
hearthbeat.performance_glance_time_interval: <%= scope['storm::backend::hearthbeat_performance_glance_time_interval'] %>

info_quota_refresh_period: <%= scope['storm::backend::info_quota_refresh_period'] %>
http_turl_prefix: <%= scope['storm::backend::http_turl_prefix'] %>
server_pool_status_check_timeout: <%= scope['storm::backend::server_pool_status_check_timeout'] %>
abort_maxloop: <%= scope['storm::backend::abort_maxloop'] %>
ping_properties_filename: <%= scope['storm::backend::ping_properties_filename'] %>
