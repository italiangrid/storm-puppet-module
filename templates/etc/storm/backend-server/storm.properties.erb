# StoRM Backend configuration file
# WARNING: This file is auto-generated by puppet!

version: 2.0

db.username: <%= scope['db']['username'] %>
db.password: <%= scope['db']['password'] %>
db.hostname: <%= scope['db']['hostname'] %>
db.port: <%= scope['db']['port'] %>
db.properties: <%= scope['db']['properties'] %>

db.pool.size: <%= scope['db_pool']['size'] %>
db.pool.min_idle: <%= scope['db_pool']['min_idle'] %>
db.pool.max_wait_millis: <%= scope['db_pool']['max_wait_millis'] %>
db.pool.test_on_borrow: <%= scope['db_pool']['test_on_borrow'] %>
db.pool.test_while_idle: <%= scope['db_pool']['test_while_idle'] %>

<%- # srm endpoints loop
scope['storm::backend::srm_pool_members'].each_with_index do | member, i |
  @port = member['port'] != nil ? member['port'] : 8444
  @host = member['hostname']
-%>
srm_endpoints[<%=i%>].host: <%= @host %>
srm_endpoints[<%=i%>].port: <%= @port %>
<%- end # srm endpoints loop -%>

rest.port: <%= scope['rest_server']['port'] %>
rest.max_threads: <%= scope['rest_server']['max_threads'] %>
rest.max_queue_size: <%= scope['rest_server']['max_queue_size'] %>

xmlrpc.port: <%= scope['xmlrpc_server']['port'] %>
xmlrpc.max_threads: <%= scope['xmlrpc_server']['max_threads'] %>
xmlrpc.max_queue_size: <%= scope['xmlrpc_server']['max_queue_size'] %>

sanity_checks_enabled: <%= scope['storm::backend::sanity_checks_enabled'] %>

du.enabled: <%= scope['du_service']['enabled'] %>
du.initial_delay: <%= scope['du_service']['initial_delay'] %>
du.tasks_interval: <%= scope['du_service']['tasks_interval'] %>
du.parallel_tasks_enabled: <%= scope['du_service']['parallel_tasks_enabled'] %>

security.enabled: <%= scope['storm::backend::security']['enabled'] %>
security.token: <%= scope['storm::backend::security']['token'] %>

inprogress_requests_agent.delay: <%= scope['inprogress_requests_agent']['delay'] %>
inprogress_requests_agent.interval: <%= scope['inprogress_requests_agent']['interval'] %>
inprogress_requests_agent.ptp_expiration_time: <%= scope['inprogress_requests_agent']['ptp_expiration_time'] %>

expired_spaces_agent.delay: <%= scope['expired_spaces_agent']['delay'] %>
expired_spaces_agent.interval: <%= scope['expired_spaces_agent']['interval'] %>

completed_requests_agent.enabled: <%= scope['completed_requests_agent']['enabled'] %>
completed_requests_agent.delay: <%= scope['completed_requests_agent']['delay'] %>
completed_requests_agent.interval: <%= scope['completed_requests_agent']['interval'] %>
completed_requests_agent.purge_age: <%= scope['completed_requests_agent']['purge_age'] %>
completed_requests_agent.purge_size: <%= scope['completed_requests_agent']['purge_size'] %>

requests_picker_agent.delay: <%= scope['requests_picker_agent']['delay'] %>
requests_picker_agent.interval: <%= scope['requests_picker_agent']['interval'] %>
requests_picker_agent.max_fetched_size: <%= scope['requests_picker_agent']['max_fetched_size'] %>

requests_scheduler.core_pool_size: <%= scope['requests_scheduler']['core_pool_size'] %>
requests_scheduler.max_pool_size: <%= scope['requests_scheduler']['max_pool_size'] %>
requests_scheduler.queue_size: <%= scope['requests_scheduler']['queue_size'] %>
ptp_scheduler.core_pool_size: <%= scope['ptp_scheduler']['core_pool_size'] %>
ptp_scheduler.max_pool_size: <%= scope['ptp_scheduler']['max_pool_size'] %>
ptp_scheduler.queue_size: <%= scope['ptp_scheduler']['queue_size'] %>
ptg_scheduler.core_pool_size: <%= scope['ptg_scheduler']['core_pool_size'] %>
ptg_scheduler.max_pool_size: <%= scope['ptg_scheduler']['max_pool_size'] %>
ptg_scheduler.queue_size: <%= scope['ptg_scheduler']['queue_size'] %>
bol_scheduler.core_pool_size: <%= scope['bol_scheduler']['core_pool_size'] %>
bol_scheduler.max_pool_size: <%= scope['bol_scheduler']['max_pool_size'] %>
bol_scheduler.queue_size: <%= scope['bol_scheduler']['queue_size'] %>

extraslashes.file: <%= scope['extraslashes']['file'] %>
extraslashes.rfio: <%= scope['extraslashes']['rfio'] %>
extraslashes.gsiftp: <%= scope['extraslashes']['gsiftp'] %>
extraslashes.root: <%= scope['extraslashes']['root'] %>

skip_ptg_acl_setup: <%= scope['storm::backend::skip_ptg_acl_setup'] %>

synch_ls.max_entries: <%= scope['synch_ls']['max_entries'] %>
synch_ls.default_all_level_recursive: <%= scope['synch_ls']['default_all_level_recursive'] %>
synch_ls.default_num_levels: <%= scope['synch_ls']['default_num_levels'] %>
synch_ls.default_offset: <%= scope['synch_ls']['default_offset'] %>

pinlifetime.default: <%= scope['pinlifetime']['default'] %>
pinlifetime.maximum: <%= scope['pinlifetime']['maximum'] %>

files.default_size: <%= scope['files']['default_size'] %>
files.default_lifetime: <%= scope['files']['default_lifetime'] %>
files.default_overwrite: <%= scope['files']['default_overwrite'] %>
files.default_storagetype: <%= scope['files']['default_storagetype'] %>

directories.enable_automatic_creation: <%= scope['directories']['enable_automatic_creation'] %>
directories.enable_writeperm_on_creation: <%= scope['directories']['enable_writeperm_on_creation'] %>

hearthbeat.bookkeeping_enabled: <%= scope['hearthbeat']['bookkeeping_enabled'] %>
hearthbeat.performance_measuring_enabled: <%= scope['hearthbeat']['performance_measuring_enabled'] %>
hearthbeat.period: <%= scope['hearthbeat']['period'] %>
hearthbeat.performance_logbook_time_interval: <%= scope['hearthbeat']['performance_logbook_time_interval'] %>
hearthbeat.performance_glance_time_interval: <%= scope['hearthbeat']['performance_glance_time_interval'] %>

info_quota_refresh_period: <%= scope['storm::backend::info_quota_refresh_period'] %>
http_turl_prefix: <%= scope['storm::backend::http_turl_prefix'] %>
server_pool_status_check_timeout: <%= scope['storm::backend::server_pool_status_check_timeout'] %>
abort_maxloop: <%= scope['storm::backend::abort_maxloop'] %>
ping_properties_filename: <%= scope['storm::backend::ping_properties_filename'] %>
